% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setCrosses.R
\name{setCrosses}
\alias{setCrosses}
\title{Select a mating plan that maximizes the criteria given some parameters}
\usage{
setCrosses(
  Criterion = NULL,
  MateDesign = "half",
  n.cross = 200,
  max.cross = 4,
  min.cross = 2,
  max.cross.to.search = 1e+05,
  Weights = NULL,
  Scale = TRUE
)
}
\arguments{
\item{Criterion}{data frame with the parents and the criterion used for each parent.}

\item{MateDesign}{indicates which type of mating design should be build up.
'full_p' all parents crossed with all parents, considering self of parents and reciprocal crosses.
'full' all parents crossed with all parents, considering reciprocal crosses.
'half_p' all parents crossed with all parents, considering self of parents but not reciprocal crosses.
'half' all parents crossed with all parents, with neither, self of parents or reciprocal crosses.}

\item{n.cross}{number of crosses in the mating plan.}

\item{max.cross}{maximum number of crosses per individual in the plan.}

\item{min.cross}{minimum number of crosses per individual in the plan (this is the target, some parents might be used just one time).}

\item{max.cross.to.search}{maximum number of rows in the input to search for the solution.}

\item{Weights}{vector. Weights for each trait for building the selection index to be used.}

\item{Scale}{logical. If 'TRUE' it will scale the traits. Otherwise, will not scale the traits beforehand. The default is TRUE.}
}
\value{
A data frame with all possible crosses.
}
\description{
Select a mating plan that maximizes the criteria given some parameters
}
\examples{
  
# 1.Loading the data
data('datLines')

# 2.Mating Plan
CrossPlan = planCross(TargetPop = colnames(G))

# 3. Criterion
Crit = data.frame(Id = colnames(G),
                  Crit = Criterion[,1])

# 4. Cross
Matplan = setCrosses(Criterion = Crit, 
                     MateDesign = 'half',
                     n.cross = 100, 
                     max.cross = 10, 
                     min.cross = 1,
                     max.cross.to.search = 1e+05)

# 5. Stats
Matplan[[1]]

# 6.Mating plan
Matplan[[2]]


# 7. Criterion
CritMT = data.frame(Id = colnames(G),
                    Crit = Criterion)

# 8. Cross
MatplanMT = setCrosses(Criterion = CritMT, 
                       MateDesign = 'half',
                       n.cross = 100, 
                       max.cross = 10, 
                       min.cross = 1,
                       max.cross.to.search = 1e+05,
                       Weights = c(0.5,0.4))

# 9. Stats
MatplanMT[[1]]

# 10.Mating plan
MatplanMT[[2]]


}
\author{
Rodrigo R Amadeu, \email{rramadeu@gmail.com} Marco Antonio Peixoto, \email{marco.peixotom@gmail.com}
}
